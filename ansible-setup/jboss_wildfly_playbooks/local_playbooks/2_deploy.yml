---
# Author:       Brian Sigurdson sigurdson.brian@gmail.com
# Date:         2018-10-30
# Description:  
# If the specified version of WildFly already exists on a node, then the playbook will
# fail for that node.  The playbook will continue processing the remaining nodes, again, 
# failing if the specified version aleady exists on a node.
# 
# Therefore, the playbook will only do an initial installation, and can be run at anytime, 
# such as when adding a new node.

########################################################################################
# start playbook
########################################################################################

- name: Deploy WildFly {{ jboss_wildfly_verision }}
  hosts: slaves
  remote_user: ansible
  become_user: root
  become: true
  become_method: sudo 
  connection: ssh
  gather_facts: no

  vars_files:
    - ../local_variable_files/local-vars.yml


########################################################################################
# start tasks
########################################################################################

  tasks:
  - name: Gather facts about "{{ jboss_wildfly_install }}" and exit if "{{ jboss_wildfly_install }}" already exits
    stat:
      path: "{{ jboss_wildfly_install }}"
    register: p

  - fail:
      msg: "{{ jboss_wildfly_install }} Already exists.  Run the delete script to remove jboss_wildfly {{ jboss_wildfly_version }}, then rerun the deploy scipt."
    when: p.stat.isdir is defined and p.stat.isdir

  - name: create {{ jboss_wildfly_base }}, if it does not exist
    file:
      path: "{{ jboss_wildfly_base }}"
      state: directory
      mode: 0755
      owner: "{{ jboss_wildfly_user_name }}"
      group: "{{ jboss_wildfly_user_group }}"
      recurse: yes

  - name: Extract {{ jboss_wildfly_compressed }}/{{ jboss_wildfly_file }} into {{ jboss_wildfly_base }}
    unarchive:
      src: "{{ jboss_wildfly_compressed }}/{{ jboss_wildfly_file }}"
      dest: "{{ jboss_wildfly_base }}"

  - name: mv {{ jboss_wildfly_base }}/jboss_wildfly-{{ jboss_wildfly_version }} to {{ jboss_wildfly_install }}
    command: mv {{ jboss_wildfly_base }}/jboss_wildfly-{{ jboss_wildfly_version }} {{ jboss_wildfly_install }}

  - name: Ensure {{ jboss_wildfly_user_name }} is owner of {{ jboss_wildfly_base }} and all contents
    file:
      path: "{{ jboss_wildfly_base }}"
      owner: "{{ jboss_wildfly_user_name }}"
      group: "{{ jboss_wildfly_user_group }}"
      recurse: yes 

  - name: Create {{ jboss_wildfly_conf_dir }}, if it does not exist
    file:
      path: "{{ jboss_wildfly_conf_dir }}"
      state: directory
      mode: 0755
      owner: "{{ jboss_wildfly_user_name }}"
      group: "{{ jboss_wildfly_user_group }}"
      recurse: yes

  - name: mv {{ jboss_wildfly_install }}/{{ jboss_wildfly_default_conf_dir }}/* to {{ jboss_wildfly_conf_dir }}
    shell: mv {{ jboss_wildfly_install }}/{{ jboss_wildfly_default_conf_dir }}/* {{ jboss_wildfly_conf_dir }}

  - name: Ensure directories are 0755
    command: find {{ jboss_wildfly_install }}/{{ jboss_wildfly_default_conf_dir }} -type d -exec chmod 0755 {} \;

  - name: Ensure files are 0644
    command: find {{ jboss_wildfly_install }}/{{ jboss_wildfly_default_conf_dir }} -type f -exec chmod 0644 {} \;

  - name: Ensure {{ jboss_wildfly_user_name }} is owner of {{ jboss_wildfly_conf_dir }} and all contents
    file:
      path: "{{ jboss_wildfly_conf_dir }}"
      owner: "{{ jboss_wildfly_user_name }}"
      group: "{{ jboss_wildfly_user_name }}"
      recurse: yes 


# deleted the tasks related to creating directories
# i don't think i'll need it

# HOLD ONTO FOR THE MOMENT
# i might want to set envars for items like jboss_home, etc... in /etc/profile.d
# iterate over the dictionary jboss_wildfly_env_dict and execute each element on the command line using the shell
# for the dictionary details, see ../local_variable_files/jboss_wildfly-vars.yml
  # - name:  Append export statements for JAVA_HOME, jboss_wildfly_INSTALL, jboss_wildfly_CONF_DIR, jboss_wildfly_LOG_DIR, jboss_wildfly_PID_DIR in {{ jboss_wildfly_env_file }}
  #   shell:  "{{ item }}" 
  #   with_items: "{{ jboss_wildfly_env_list }}"


# include the varibles needed when transforming the configuration template files
#  - include:  ../local_includes/create_variables_for_config_templates.yml

# create xml config files
  # - name:  Create {{ jboss_wildfly_conf_dir }}/core-site.xml
  #   template: 
  #     src: ../local_templates/core-site.j2
  #     dest: "{{ jboss_wildfly_conf_dir }}/core-site.xml"
  #     owner: "{{ jboss_wildfly_user_name }}"
  #     group: "{{ jboss_wildfly_user_name }}"
  #     mode:  0644


# this i might actually use
  - include: ../../local_includes/delete-ansible-tmp-files.yml
